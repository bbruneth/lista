{"version":3,"sources":["componentes/Header.js","componentes/Formulario.js","componentes/Tareas.js","componentes/ListaTareas.js","App.js","index.js"],"names":["Header","mostrarCompletadas","cambiarMostrarCompletadas","toggleCompletadas","className","onClick","icon","faEyeSlash","faEye","Formulario","tareas","cambiarTareas","useState","inputTarea","cambiarInputTarea","onSubmit","e","preventDefault","id","uuidv4","texto","completada","type","placeholder","value","onChange","target","handleInput","faPlusSquare","Tarea","tarea","toggleCompletada","editarTarea","borrarTarea","editandotarea","cambiarEditandoTarea","nuevatarea","cambiarNuevaTarea","faCheckSquare","faSquare","faEdit","faTimes","ListaTareas","map","tareanueva","filter","length","App","tareasGuardadas","localStorage","getItem","JSON","parse","useEffect","setItem","stringify","configMostrarCompletadas","toString","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b839a5fd.chunk.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEyeSlash, faEye } from '@fortawesome/free-solid-svg-icons'\n\nconst Header = ({mostrarCompletadas, cambiarMostrarCompletadas}) => {\n    const toggleCompletadas = () => {\n        cambiarMostrarCompletadas(!mostrarCompletadas);\n    }\n\n    return (  \n        <header className='header'>\n            <h1 className='header__titulo'>\n                Lista De Tareas\n            </h1>\n            {mostrarCompletadas?\n                <button onClick={() => toggleCompletadas()} className='header__boton'>\n                    No mostrar completadas\n                    <FontAwesomeIcon icon={faEyeSlash} className='header__icono-boton'/>\n                </button>\n            :\n                <button onClick={() => toggleCompletadas()} className='header__boton'>\n                    Mostrar completadas\n                    <FontAwesomeIcon icon={faEye} className='header__icono-boton'/>\n                </button>\n            }\n            \n        </header>\n    );\n}\n\nexport default Header;","import React, {useState} from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons'\n\nconst Formulario = ({tareas, cambiarTareas}) => {\n    const [inputTarea, cambiarInputTarea] = useState('');\n\n    const handleInput = (e) => {\n        cambiarInputTarea(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        cambiarTareas(\n            [\n                ...tareas,\n                {\n                    id: uuidv4(),\n                    texto: inputTarea,\n                    completada: false, \n                }\n            ]\n        )\n\n        cambiarInputTarea('');\n    }\n\n    return ( \n        <form className='formulario-tareas' onSubmit={handleSubmit}>\n            <input \n                type='text' \n                className='formulario-tareas__input'\n                placeholder='Escribe una tarea'\n                value={inputTarea}\n                onChange={(e) => handleInput(e)}\n            />\n            <button \n                type='submit'\n                className='formulario-tareas__btn'\n            >\n                <FontAwesomeIcon icon={faPlusSquare} className='formulario-tareas__icono-btn'/>\n            </button>\n        </form>\n    );\n}\n\nexport default Formulario;","import React, {useState} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheckSquare, faEdit, faSquare, faTimes } from '@fortawesome/free-solid-svg-icons'\n\nconst Tarea = ({tarea, toggleCompletada, editarTarea, borrarTarea}) => {\n    const [editandotarea, cambiarEditandoTarea] = useState(false);\n    const [nuevatarea, cambiarNuevaTarea] = useState(tarea.texto);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        editarTarea(tarea.id, nuevatarea);\n        cambiarEditandoTarea(false);\n    }\n\n    return (  \n        <li className='lista-tareas__tarea'>\n            <FontAwesomeIcon onClick={() => toggleCompletada(tarea.id)} icon={tarea.completada ? faCheckSquare : faSquare} className='lista-tareas__icono lista-tareas__icono-check'/>\n            <div className='lista-tareas__texto'>\n            {editandotarea ?\n            <form className='formulario-editar-tarea' onSubmit={handleSubmit}>\n                <input type='text' className='formulario-editar-tarea__input' value={nuevatarea} onChange={(e) => cambiarNuevaTarea(e.target.value)}/>\n                <button type='submit' className='formulario-editar-tarea__btn'>Actualizar</button>\n            </form>\n            : tarea.texto\n            }\n            </div>\n            <div className='lista-tareas__contenedor-botones'>\n                <FontAwesomeIcon \n                    icon={faEdit} \n                    className='lista-tareas__icono lista-tareas__icono-accion'\n                    onClick={() => cambiarEditandoTarea(!editandotarea)}\n                />\n                <FontAwesomeIcon \n                    icon={faTimes} \n                    className='lista-tareas__icono lista-tareas__icono-accion'\n                    onClick={() => borrarTarea(tarea.id)}\n                />\n            </div>\n        </li>\n\n    );\n}\n\nexport default Tarea;","import React from 'react';\nimport Tarea from './Tareas';\n\nconst ListaTareas = ({tareas, cambiarTareas, mostrarCompletadas}) => {\n    const toggleCompletada = (id) => {\n        cambiarTareas(tareas.map( (tarea) => {\n            if(tarea.id === id){\n                return {...tarea, completada: !tarea.completada};\n            }else{\n                return tarea;\n            }\n        }));\n    }\n\n    const editarTarea = (id, tareanueva) => {\n        cambiarTareas(tareas.map( (tarea) => {\n            if(tarea.id === id){\n                return {...tarea, texto: tareanueva};\n            }else{\n                return tarea;\n            }\n        }));\n    }\n\n    const borrarTarea = (id) => {\n        cambiarTareas(tareas.filter((tarea) => {\n            if(tarea.id !== id){\n                return tarea;\n            }else{\n                return;\n            }\n        }));\n    }\n\n    return (  \n        <ul className='lista-tareas'>\n            { tareas.length > 0 ? tareas.map((tarea) => {\n                if(mostrarCompletadas){\n                    return <Tarea key={tarea.id} tarea={tarea} toggleCompletada={toggleCompletada} editarTarea={editarTarea} borrarTarea={borrarTarea}/>;\n                }else if(!tarea.completada){\n                    return <Tarea key={tarea.id} tarea={tarea} toggleCompletada={toggleCompletada} editarTarea={editarTarea} borrarTarea={borrarTarea}/>;\n                }\n                return;\n            })\n            : <div className='lista-tareas__mensaje'>No hay tareas</div>\n            }\n        </ul>\n    );\n}\n\nexport default ListaTareas;","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Header from './componentes/Header.js';\nimport Formulario from './componentes/Formulario.js';\nimport ListaTareas from './componentes/ListaTareas.js';\n\nconst App = () => {\n  const tareasGuardadas = \n  localStorage.getItem('tareas') ? JSON.parse(localStorage.getItem('tareas')) : [];\n  const [tareas, cambiarTareas] = useState(tareasGuardadas);\n\n  useEffect(() => {\n    localStorage.setItem('tareas', JSON.stringify(tareas));\n  }, [tareas]);\n\n  let configMostrarCompletadas = '';\n  if(localStorage.getItem('mostrarCompletadas') === null){\n    configMostrarCompletadas = true;\n  }else{\n    configMostrarCompletadas = localStorage.getItem('mostrarCompletadas') === true;\n  }\n\n  const [mostrarCompletadas, cambiarMostrarCompletadas] = useState(configMostrarCompletadas);\n\n  useEffect(() => {\n    localStorage.setItem('mostrarCompletadas', mostrarCompletadas.toString());\n  }, [mostrarCompletadas]);\n\n  return (\n    <div className='contenedor'>\n      <Header mostrarCompletadas={mostrarCompletadas} cambiarMostrarCompletadas={cambiarMostrarCompletadas}/>\n      <Formulario tareas={tareas} cambiarTareas={cambiarTareas}/>\n      <ListaTareas tareas={tareas} cambiarTareas={cambiarTareas} mostrarCompletadas={mostrarCompletadas}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}